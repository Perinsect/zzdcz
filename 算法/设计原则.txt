开闭原则：一个软件实体，如类，模块和函数应该对外扩展开发，对内修改关闭，用抽象构建框架，用实现扩展细节
里氏替换：子类可以扩展父类的功能，但不能改变父类原有的功能，所有引用基类的地方必须能透明地使用其子类的对象，也就是说子类对象可以替换其父类对象
依赖倒置：针对接口编程，而不是针对实现编程。尽量不要从具体的类派生，而是以继承抽象类或实现接口来实现
单一职责：一个类只允许有一个职责，一个类应该有且仅有一个引起它变化的原因，否则类应该被拆分
接口隔离：要为各个类建立它们需要的专用接口，而不要试图去建立一个很庞大的接口供所有依赖它的类去调用，一个类对另一个类的依赖应该建立在最小的接口上
迪米特法则：一个类对于其他类知道的越少越好，只与你的直接朋友交谈，不跟“陌生人”说话